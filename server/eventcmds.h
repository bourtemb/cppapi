//=============================================================================
//
// file :         EventTesterClass.h
//
// description :  Include for the Event commands which are part of
//		  the DServer class.
//			
// project :      TANGO events
//
// $Author$
//
// $Revision$
//
// $Log$
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#ifndef _EVENTCMDS_H
#define _EVENTCMDS_H

#include <tango.h>

namespace Tango
{
//
// Define classes for commands
//
class EventObtainOfferedTypesCmd : public Tango::Command
{
public:
	EventObtainOfferedTypesCmd(const char *,Tango::CmdArgType, Tango::CmdArgType,const char *,const char *);
	EventObtainOfferedTypesCmd(const char *,Tango::CmdArgType, Tango::CmdArgType);
	~EventObtainOfferedTypesCmd() {};
	
	virtual bool is_allowed (Tango::DeviceImpl *, const CORBA::Any &);
	virtual CORBA::Any *execute (Tango::DeviceImpl *, const CORBA::Any &);
};


class EventSubscriptionChangeCmd : public Tango::Command
{
public:
	EventSubscriptionChangeCmd(const char *,Tango::CmdArgType, Tango::CmdArgType,const char *,const char *);
	EventSubscriptionChangeCmd(const char *,Tango::CmdArgType, Tango::CmdArgType);
	~EventSubscriptionChangeCmd() {};
	
	virtual bool is_allowed (Tango::DeviceImpl *, const CORBA::Any &);
	virtual CORBA::Any *execute (Tango::DeviceImpl *, const CORBA::Any &);
};
}	//	namespace Tango

#endif // _EVENTTESTERCLASS_H
